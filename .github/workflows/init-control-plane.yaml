name: Initialize Kubernetes Cluster

on:
  workflow_dispatch:

  workflow_run:
    workflows: ["Provision K8s Infrastructure"]
    types:
      - completed

jobs:
  init-k8s:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Connect via SSH and initialize Kubernetes
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.CONTROL_PLANE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "🔧 Installing dependencies..."
            sudo apt-get update -y
            sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release unzip

            echo "🐳 Installing containerd..."
            sudo apt-get install -y containerd
            sudo mkdir -p /etc/containerd
            containerd config default | sudo tee /etc/containerd/config.toml > /dev/null
            sudo systemctl restart containerd
            sudo systemctl enable containerd

            
            
            echo "📦 Installing Kubernetes tools..."
            sudo curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/kubernetes-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubelet kubeadm kubectl
            sudo apt-mark hold kubelet kubeadm kubectl


            if [ ! -f /etc/kubernetes/admin.conf ]; then
              echo "🚀 Initializing Kubernetes..."
              sudo kubeadm init --pod-network-cidr=192.168.0.0/16 | tee /tmp/kubeadm-init.log
            fi

            mkdir -p $HOME/.kube
            sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config

            echo "🌐 Installing Calico CNI..."
            kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.2/manifests/calico.yaml

            echo "🔐 Installing AWS CLI if missing..."
            if ! command -v aws &> /dev/null; then
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip -q awscliv2.zip
              sudo ./aws/install
            fi

            echo "🔑 Creating kubeadm join command..."
            JOIN_CMD=$(kubeadm token create --print-join-command)

            echo "🔒 Saving join command to AWS Secrets Manager..."
            aws secretsmanager put-secret-value \
              --secret-id deema-kubeadm-join-command \
              --secret-string "$JOIN_CMD" \
              --region us-west-1
